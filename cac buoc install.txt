npm install redux@4.1.2 react-redux@7.2.6

tạo thư mục src/redux

tạo thư mục src/reducer

tạo thư mục src/action

tạo file src/redux/store.js

thêm dòng sau vào file index.js:
    import {Provider} from 'react-redux'

mở file index.js
    sửa đoạn code:
        <React.StrictMode>
            <App />
        </React.StrictMode>
    thành:
        <Provider store={store}>
            <React.StrictMode>
                <App />
            </React.StrictMode>
        </Provider>

mở file src/redux/store.js và dán vào đoạn code sau:
    import { createStore } from 'redux';
    import rootReducer from '../reducer/rootReducer';
    const store = createStore(rootReducer);
    export default store;

tạo file src/reducer/rootReducer.js với nội dung sau:
    import { combineReducers } from 'redux';
    import counterReducer from './counterReducer';

    const rootReducer = combineReducers({
        counter: counterReducer,
    });

    export default rootReducer;

tạo file src/reducer/counterReducer.js

tạo file src/action/types.js với nội dung sau:
    export const INCREMENT = 'INCREMENT';
    export const DECREMENT = 'DECREMENT';

tạo file src/action/actions.js với nội dung sau:
    import { INCREMENT, DECREMENT } from './types';

    export const increaseCounter = () => {
        return {
            type: INCREMENT,
        };
    };

    export const decreaseCounter = () => {
        return {
            type: DECREMENT,
        };
    };

mở file src/reducer/counterReducer.js và dán vào đoạn code sau:
    import { INCREMENT, DECREMENT } from '../action/types';

    const INITIAL_STATE = {
        count: 0,
    };

    const reducer = (state = INITIAL_STATE, action) => {
        switch (action.type) {
            case INCREMENT:
                return {
                    ...state, count: state.count + 1,
                };
            case DECREMENT:
                return {
                    ...state, count: state.count - 1,
                };
            default: return state;
        }
    };

    export default reducer;

mở file App.js:
    dán vào đoạn code sau:
        import { connect } from "react-redux"
        import { increaseCounter, decreaseCounter } from "./action/actions"
    dán vào đoạn code sau (sau dòng <h1>Hello world with React!</h1>):
        <div>Count: {props.count}</div>
        <button onClick={() => props.increaseCounter()}>Increase Count</button>
        <button onClick={() => props.decreaseCounter()}>Decrease Count</button>
    xóa dòng export default App; và dán vào đoạn code sau:
    sửa function App() thành function App(props)

npm install redux-devtools-extension@2.13.9

mở file src/redux/store.js:
    dán vào đoạn code sau:
    import { composeWithDevTools } from 'redux-devtools-extension';
    sửa const store = createStore(rootReducer); thành const store = createStore(rootReducer, composeWithDevTools());

cài extension có tên Redux DevTools vào trình duyệt để xem các giá trị của redux

npm install --save-exact axios@0.26.1

npm install --save-exact react-bootstrap@2.1.1 bootstrap@5.1.3

tạo file src/components/Header.js với nội dung sau (copy và chỉnh sửa từ https://react-bootstrap.netlify.app/components/navbar/):
    import { Container, Nav, Navbar, NavDropdown } from "react-bootstrap"

    const Header = (props) => {
        return (
            <>
                <Navbar bg="light" expand="lg">
                    <Container>
                        <Navbar.Brand href="#home">React-Bootstrap</Navbar.Brand>
                        <Navbar.Toggle aria-controls="basic-navbar-nav" />
                        <Navbar.Collapse id="basic-navbar-nav">
                            <Nav className="me-auto">
                                <Nav.Link href="#home">Home</Nav.Link>
                                <Nav.Link href="#link">Link</Nav.Link>
                                <NavDropdown title="Dropdown" id="basic-nav-dropdown">
                                    <NavDropdown.Item href="#action/3.1">Action</NavDropdown.Item>
                                    <NavDropdown.Item href="#action/3.2">Another action</NavDropdown.Item>
                                    <NavDropdown.Item href="#action/3.3">Something</NavDropdown.Item>
                                    <NavDropdown.Divider />
                                    <NavDropdown.Item href="#action/3.4">Separated link</NavDropdown.Item>
                                </NavDropdown>
                            </Nav>
                        </Navbar.Collapse>
                    </Container>
                </Navbar>
            </>
        )
    }
    export default Header

tạo file src/components/TableUser.js

tạo file src/components/FormAddNew.js

tạo file src/components/Home.js với nội dung sau:
    import FormAddNew from "./FormAddNew"
    import Header from "./Header"
    import TableUser from "./TableUser"

    const Home = (props) => {
        return (
            <>
                <Header />
                <FormAddNew />
                <TableUser />
            </>
        )
    }
    export default Home

npm install --save-exact redux-thunk@2.4.1

mở file store.js cấu hình để sử dụng redux thunk:
    thêm vào dòng code sau:
        import thunkMiddleware from 'redux-thunk';
    sửa import { createStore } from 'redux'; thành import { createStore, applyMiddleware } from 'redux';
    sửa const store = createStore(rootReducer, composeWithDevTools(); thành const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunkMiddleware)));

mở file src/action/actions.js và thêm vào các hàm sau để sử dụng redux thunk:
    fetchAllUsers
    fetchUsersRequest
    fetchUsersSuccess
    fetchUsersError

mở file src/action/type.js và thêm vào các type sau để sử dụng redux thunk:
    export const FETCH_USER_REQUEST = 'FETCH_USER_REQUEST';
    export const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS';
    export const FETCH_USER_ERROR = 'FETCH_USER_ERROR';

tạo file src/reducer/userReducer.js với nội dung sau để sử dụng redux thunk:
    import { FETCH_USER_REQUEST, FETCH_USER_SUCCESS, FETCH_USER_ERROR } from '../action/types';

    const INITIAL_STATE = {
        listUsers: []
    };

    const userReducer = (state = INITIAL_STATE, action) => {
        switch (action.type) {
            case FETCH_USER_REQUEST:
                return {
                    ...state
                };
            case FETCH_USER_SUCCESS:
                return {
                    ...state, listUsers: action.dataUsers
                };
            case FETCH_USER_ERROR:
                return {
                    ...state
                };
            default: return state;
        }
    };

    export default userReducer;

mở file src/reducer/rootReducer.js và thêm vào các dòng code sau để sử dụng userReducer.js:
    import userReducer from './userReducer';
    user: userReducer

mở file src/components/TableUser.js:
    xóa khai báo và lời gọi hàm fetchAllUser()
    thêm vào các dòng code sau: 
        import { useDispatch } from "react-redux"
        import { fetchAllUsers } from "../action/actions"
        const dispatch = useDispatch()
    thêm vào hàm useEffect dòng code sau:
        dispatch(fetchAllUsers())
    xóa dòng const [listUsers, setListUsers] = useState([])
    thêm vào đoạn code sau: const listUsers = useSelector((state) => state.user.listUsers)

